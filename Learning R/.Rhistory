for (i in 1:10){
print(i)
}
for (1:10){
x<- i/5
print(x)
}
for (i in 1:10){
x<- i/5
print(x)
}
for (i in 1:20){
x<- i/4
print(x)
}
for (i in 1:n){
x<- i/4
print(x)
}
for (i in 1:n){
x<- i/4
print(x)
}
for (i in 1:n){
x<- i/4
print(x)
}
n <-c(20)
for (i in 1:n){
x<- i/4
print(x)
}
getwd("~/Documents/GitHub/meta-analysis/Learing R")
fish<-read.csv("~/documents/GitHub/meta-analysis/Learning R/fish_agg.csv")
View(fish)
View(fish)
View(fish)
Res<- lm(fish$Time~fish$Predation*fish$Sex)
View(Res)
Summary(Res)
summary(Res)
#the LP predation is significant, the estimated Std shows which variable is more aggressive
#the large or positive number shows whatever is in the table is more aggressive
# the small or negative number estimated Std shows the variable out of the table is more aggressive
Avova(Res)
#the LP predation is significant, the estimated Std shows which variable is more aggressive
#the large or positive number shows whatever is in the table is more aggressive
# the small or negative number estimated Std shows the variable out of the table is more aggressive
anova(Res)
aov(Res)
summary(Res)
#writing a loop
for (1 in 1:10){
x<-i/2
print(i)
}
#writing a loop
for (1 in 1:10){
x<- i/2
print(x)
}
#writing a loop
for (1 in 1:10){
x<- i/2
print(x)
}
#writing a loop
for (1 in 1:10) {
x<- i/2
print(x)
}
#writing a loop
for (1 in 1:10) {
x<- i/2
print(x)
}
#writing a loop
for (1 in 1:10) {
x<- i/2
print(x)
}
print(x)}
print(x)}
#writing a loop
for (1 in 1:10){
x<- i/2
print(x)
}
#writing a loop
for (i in 1:10){
x<- i/2
print(x)
}
#prince and his walks
walk<-read.csv("~/documents/GitHub/meta-analysis/Learning R/walk.csv)
#prince and his walks
walk<-read.csv("~/documents/GitHub/meta-analysis/Learning R/walk.csv")
View(walk)
Prince<-cor.test(walk$Time,walk$Temp)
View(Prince)
summary(Prince)
View(Prince)
cor.test(walk$Time,walk$Temp)
#This only prints the values and we really want to replace the values
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
survey_adjusted$weight[i] <- survey_adjusted$weight[i]*1.1
}
}
#You should see some numbers pop up but
#there are a lot of points outside 1984
#Only print data from 1984 that is adjusted
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
print(survey_adjusted$weight[i]*1.1)
}
}
#For Loops and If statements
#Read in the data (surveys.csv)
setwd("~/Documents/GitHub/meta-analysis/Learning R")
survey <- read.csv("C:\\Users\\sarah\\Documents\\GitHub\\meta-analysis\\Learning R\\surveys.csv")
survey <- read.csv("surveys.csv")
#For Loops and If statements
#Read in the data (surveys.csv)
setwd("~/Documents/GitHub/meta-analysis/Learning R")
survey <- read.csv("C:\\Users\\sarah\\Documents\\GitHub\\meta-analysis\\Learning R\\surveys.csv")
survey <- read.csv("surveys.csv")
#Let's visualize the data using a histogram of the weights
hist(survey$weight, main = "Distribution of weights",
xlab = "weight (g)", col = "cyan1")
#Take the mean of weight and ignore NA values
mean(survey$weight, na.rm = T)
#subset method
#Basic structure:
#name <- subset(data, data$column == or != "value")
#== means equals and != means does not equal
#Pull out rows by the year 1984
survey1984 <- subset(survey, survey$year == "1984")
#Pull out all rows other than the year 1984
surveyother <- subset(survey, survey$year != "1984")
#recombine the data to create the adjusted data
adjsurvey <- rbind(survey1984,surveyother)
survey1984$weight <- survey1984$weight*1.1
#Take the mean and see difference with original value
mean(adjsurvey$weight, na.rm = T)
#visualize the new data and compare it to the first
hist(adjsurvey$weight, main = "Distribution of adjusted weights",
xlab = "weight (g)", col = "orchid")
#if/else statements
#Basic structure:
#if (condition is TRUE) {
#  do something
#} else {
#  do different thing
#}
#Let's try this for the first value to figure out if it is 1984 or not
if (survey$year[1] == 1984){
print("Great Scott, it's 1984")
} else {
print("it's not 1984")
}
#Using an if/else statement
if (survey$weight[523] >= 28.3){
print("You're gonna need a bigger boat")
} else {
print("This boat will do")
}
#Using an if/else statement
if (survey$weight[523] >= 28.3){
print("You're gonna need a bigger boat")
} else {
print("This boat will do")
}
#Create a for loop to print numbers 1 through 10
for (i in 1:10){
print(i)
}
#Create a for loop to print numbers 1 through 10
for (i in 1:10){
print(i)
}
#You can also do this with words
for (i in c("corgi", "shark", "bantha")) {
print(i)
}
#dimensions and prints rows by columns
dim(survey)
if (survey$year[i] == 1984) {
print("Great Scott, it's 1984!")
} else {
print("It's not 1984.")
}
for (i in 1:dim(survey)[1]) {
if (survey$year[i] == 1984) {
print("Great Scott, it's 1984!")
} else {
print("It's not 1984.")
}
}
for (i in 1:dim(survey)[1]) {
if (survey$year[i] == 1984) {
print("Great Scott, it's 1984!")
} else {
print("It's not 1984.")
}
}
#You should see some numbers pop up but
#there are a lot of points outside 1984
#Only print data from 1984 that is adjusted
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
print(survey_adjusted$weight[i]*1.1)
}
}
#You should see some numbers pop up but
#there are a lot of points outside 1984
#Only print data from 1984 that is adjusted
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
print(survey_adjusted$weight[i]*1.1)
}
}
#This only prints the values and we really want to replace the values
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
survey_adjusted$weight[i] <- survey_adjusted$weight[i]*1.1
}
}
#You should see some numbers pop up but
#there are a lot of points outside 1984
#Only print data from 1984 that is adjusted
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
print(survey_adjusted$weight[i]*1.1)
}
}
#It prints either command for all values
#Let's have R adjust the weights
#Make a copy of survey
survey_adjusted <- survey
#You should see some numbers pop up but
#there are a lot of points outside 1984
#Only print data from 1984 that is adjusted
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
print(survey_adjusted$weight[i]*1.1)
}
}
#You should see some numbers pop up but
#there are a lot of points outside 1984
#Only print data from 1984 that is adjusted
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
print(survey_adjusted$weight[i]*1.1)
}
}
#This only prints the values and we really want to replace the values
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
survey_adjusted$weight[i] <- survey_adjusted$weight[i]*1.1
}
}
#This only prints the values and we really want to replace the values
for (i in 1:dim(survey_adjusted)[1]) {
if (survey_adjusted$year[i] == 1984) {
survey_adjusted$weight[i] <- survey_adjusted$weight[i]*1.1
}
}
#Check to see if we got the same mean as before
mean(survey_adjusted$weight, na.rm = T)
#Check only 1984 for each method
original_1984_weight <- mean(survey$weight[survey$year == 1984],
na.rm = TRUE)
subset_1984_weight <- mean(adjsurvey$weight[adjsurvey$year == 1984],
na.rm = T)
ifelse_1984_weight <- mean(survey_adjusted$weight[survey_adjusted$year
== 1984], na.rm = T)
original_1984_weight * 1.1
surveys_adj_no_na <- survey_adjusted[!is.na(survey_adjusted$weight),]
large <- data.frame(weight = rep(0,32283),sex = rep(0,32283))
small <- data.frame(weight = rep(0,32283),sex = rep(0,32283))
#This will take a while so let it sit until you get > back
for (i in 1:length(surveys_adj_no_na$weight)) {
if (surveys_adj_no_na$weight[i] >= 28.3) {
large$weight[i] <- surveys_adj_no_na$weight[i]
large$sex[i] <- surveys_adj_no_na$sex[i]
} else {
small$weight[i] <- surveys_adj_no_na$weight[i]
small$sex[i] <- surveys_adj_no_na$sex[i]
}
}
if (surveys_adj_no_na$weight[i] >= 28.3) {
large$weight[i] <- surveys_adj_no_na$weight[i]
large$sex[i] <- surveys_adj_no_na$sex[i]
} else {
small$weight[i] <- surveys_adj_no_na$weight[i]
small$sex[i] <- surveys_adj_no_na$sex[i]
}
#Number of large animals removing the original zeros
large_no0 <- subset(large,large$weight != 0)
small_no0 <- subset(small, small$weight != 0)
dim(large_no0)
#Number of males and females with less than one ounce in weight
females <- data.frame(weight = rep(0,length(small_no0$weight)),
sex = rep(0,length(small_no0$weight)))
#Number of males and females with less than one ounce in weight
females <- data.frame(weight = rep(0,length(small_no0$weight)),
sex = rep(0,length(small_no0$weight)))
males <- data.frame(weight = rep(0,length(small_no0$weight)),
sex = rep(0,length(small_no0$weight)))
males <- data.frame(weight = rep(0,length(small_no0$weight)),
sex = rep(0,length(small_no0$weight)))
for (i in 1:length(small_no0$weight)) {
if (small_no0$sex[i] == "F") {
females$weight[i] <- small_no0$weight[i]
females$sex[i] <- small_no0$sex[i]
} else if (small_no0$sex[i] == "M") {
males$weight[i] <- small_no0$weight[i]
males$sex[i] <- small_no0$sex[i]
} else {
print("no sex")
}
}
if (small_no0$sex[i] == "F") {
females$weight[i] <- small_no0$weight[i]
females$sex[i] <- small_no0$sex[i]
} else if (small_no0$sex[i] == "M") {
males$weight[i] <- small_no0$weight[i]
males$sex[i] <- small_no0$sex[i]
} else {
print("no sex")
}
females_no0 <- subset(females,females$weight != 0)
males_no0 <- subset(males, males$weight != 0)
dim(females_no0)
dim(males_no0)
#Functions
#Read in the data (surveys.csv
setwd("~/Documents/GitHub/meta-analysis/Learning R")
surveys <- read.csv("C:/Documents/GitHub/meta-analysis/Learning R/surveys.csv")
surveys <- read.csv("surveys.csv")
#first let's copy the data and like last time
surveys_adjusted <- surveys
#Create our loop to save and change the variables
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- surveys$weight[i]*1.1245697375083747+ 10
surveys_adjusted$hindfoot_length[i] <-
surveys$hindfoot_length[i]*1.1245697375093747 + 10
}
}
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- surveys$weight[i]*1.1245697375083747+ 10
surveys_adjusted$hindfoot_length[i] <-
surveys$hindfoot_length[i]*1.1245697375093747 + 10
}
#Create our loop to save and change the variables
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- surveys$weight[i]*1.1245697375083747+ 10
surveys_adjusted$hindfoot_length[i] <-
surveys$hindfoot_length[i]*1.1245697375093747 + 10
}
}
#Let's create a function that converts the 1984 data
#We will give it the value and have it convert the data
convert_1984 <- function(myval) {
myval_adjusted <- myval*1.1245697375083747 + 10
return(myval_adjusted)
}
#Let's create a function that converts the 1984 data
#We will give it the value and have it convert the data
convert_1984 <- function(myval) {
myval_adjusted <- myval*1.1245697375083747 + 10
return(myval_adjusted)
}
#The function takes values (myval) and converts it by multiplying by
#1.1245697375083747 and adding ten. Let's try 1 to see if it works
convert_1984(1)
#Now let's add our function to the loop so we can go through the data
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
}
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
#Now let's add our function to the loop so we can go through the data
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
}
#Now let's add our function to the loop so we can go through the data
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
}
#Create volume function with r as your parameter
vol <- function(r){
(4/3)*pi*r^3
}
#Create volume function with r as your parameter
vol <- function(r){
(4/3)*pi*r^3
}
#create empty vectors to store the data
volume <- c()
radius <- c()
for (i in 1:dim(surveys_adjusted)[1]) {
radius[i] <- surveys_adjusted$hindfoot_length[i]/2
volume[i] <- vol(radius[i])
}
volume[i] <- vol(radius[i])
for (i in 1:dim(surveys_adjusted)[1]) {
radius[i] <- surveys_adjusted$hindfoot_length[i]/2
volume[i] <- vol(radius[i])
}
#Let's visualize the data
plot(radius, volume, pch = 16, col = rgb(1,0,1,0.25))
#Create our loop to save and change the variables
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- surveys$weight[i]*1.1245697375083747+ 10
surveys_adjusted$hindfoot_length[i] <-
surveys$hindfoot_length[i]*1.1245697375083747 + 10
}
}
#Let's create a function that converts the 1984 data
#We will give it the value and have it convert the data
convert_1984 <- function(myval) {
myval_adjusted <- myval*1.1245697375083747 + 10
return(myval_adjusted)
}
return(myval_adjusted)
#Let's create a function that converts the 1984 data
#We will give it the value and have it convert the data
convert_1984 <- function(myval) {
myval_adjusted <- myval*1.1245697375083747 + 10
return(myval_adjusted)
}
View(vol)
#The function takes values (myval) and converts it by multiplying by
#1.1245697375083747 and adding ten. Let's try 1 to see if it works
convert_1984(1)
#Now let's add our function to the loop so we can go through the data
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
}
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
#Now let's add our function to the loop so we can go through the data
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
}
#Now let's add our function to the loop so we can go through the data
for (i in 1:dim(surveys)[1]) {
if (surveys$year[i] == 1984) {
surveys_adjusted$weight[i] <- convert_1984(surveys$weight[i])
surveys_adjusted$hindfoot_length[i] <-
convert_1984(surveys$hindfoot_length[i])
}
}
vol <- function(r){
(4/3)*pi*r^3
}
#create empty vectors to store the data
volume <- c()
radius <- c()
for (i in 1:dim(surveys_adjusted)[1]) {
radius[i] <- surveys_adjusted$hindfoot_length[i]/2
volume[i] <- vol(radius[i])
}
#Let's visualize the data
plot(radius, volume, pch = 16, col = rgb(1,0,1,0.25))
vol <- function(r){(4/3)*pi*r^3
}
vol(1)
